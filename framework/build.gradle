apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'signing'
configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.buildFeatures.dataBinding = true
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

//publishing {
//    publications {
//        maven(MavenPublication) {
//            groupId 'io.github.yollpoll'
//            //You can either define these here or get them from project conf elsewhere
//            artifactId 'framework'
//            version '0.0.1-SNAPSHOT'
//            artifact "$buildDir/outputs/aar/framework-release.aar"
//            //aar artifact you want to publish
//            // generate pom nodes for dependencies
//            pom.withXml {
////                name = 'framework'
////                packaging 'aar'
//                description = 'my android framework'
//                url = 'https://github.com/yollpoll/framework'
//                properties = [
//                        myProp: "value",
//                        "prop.with.dots": "anotherValue"
//                ]
//                licenses {
//                    license {
//                        name = 'The Apache License, Version 2.0'
//                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//                    }
//                }
//                developers {
//                    developer {
//                        id = 'yolloll'
//                        name = 'pengqi.song'
//                        email = '403716879@qq.com'
//                    }
//                }
//                scm {
//                    connection = 'scm:git:https://github.com/yollpoll/framework.git'
//                    developerConnection = 'scm:git:https://github.com/yollpoll/framework.git'
//                    url = 'https://github.com/yollpoll/framework'
//                }
//
//                def dependenciesNode = asNode().appendNode('dependencies')
//                configurations.implementation.allDependencies.each { dependency ->
//                    if ("unspecified" != dependenciesNode.name && "unspecified" != dependency.name) {
//                        def dependencyNode = dependenciesNode.appendNode('dependency')
//                        dependencyNode.appendNode('groupId', dependency.group)
//                        dependencyNode.appendNode('artifactId', dependency.name)
//                        dependencyNode.appendNode('version', dependency.version)
//                    }
//                }
//
//            }
//        }
//    } //publish to filesystem repo
//    repositories {
//        maven {
//            credentials {
//                username 'yollpoll' // 仓库发布用户名
//                password '777861@Ksxz`' // 仓库发布用户密码
//            }
//            url "https://s01.oss.sonatype.org"
////            url "$buildDir/repo"
//        }
//        maven {
//            name "local"
//            url "$buildDir/repo"
//        }
//    }
//}






dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'commons-beanutils:commons-beanutils:1.9.3'
    implementation('com.novoda:bintray-release:0.2.7') {
        exclude group: 'commons-beanutils'
    }
    implementation 'androidx.appcompat:appcompat:1.1.0'
//    api project(path: ':annotation')


//    annotationProcessor project(path: ':annotation-compiler')
//    api project(path: ':annotation')

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    api 'com.orhanobut:logger:2.2.0'
    implementation "androidx.core:core-ktx:+"

    def lifecycle_version = "2.2.0"
    def arch_version = "2.1.0"

    // ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    // LiveData
    api "androidx.lifecycle:lifecycle-livedata:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"

    // Saved state module for ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    annotationProcessor "androidx.lifecycle:lifecycle-compiler:$lifecycle_version"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // optional - helpers for implementing LifecycleOwner in a Service
    api "androidx.lifecycle:lifecycle-service:$lifecycle_version"

    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process
    api "androidx.lifecycle:lifecycle-process:$lifecycle_version"

    // optional - ReactiveStreams support for LiveData
    api "androidx.lifecycle:lifecycle-reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arch_version"

    api 'com.google.code.gson:gson:2.8.6'

    api 'com.neovisionaries:nv-websocket-client:2.10'

    //retrofit
    //配置retrofit2.0
    api 'com.squareup.retrofit2:retrofit:+'
    api 'com.squareup.retrofit2:converter-gson:+'
    //Rxjava2需要依赖
    api 'io.reactivex.rxjava2:rxjava:+'
    api 'io.reactivex.rxjava2:rxandroid:+'

    //让retrofit支持Rxjava2
    api 'com.squareup.retrofit2:adapter-rxjava2:+'
    api 'com.squareup.okhttp3:okhttp:3.4.0'
    api 'com.squareup.okhttp3:logging-interceptor:3.4.0'

    api ('io.github.yollpoll:annotation:0.0.1-SNAPSHOT'){
        changing = true
        transitive=true}

}
repositories {
    mavenCentral()
}
ext {
    PUBLISH_GROUP_ID = "io.github.yollpoll"		//项目包名
    PUBLISH_ARTIFACT_ID = 'framework'			//项目名
    PUBLISH_VERSION = "0.0.1-SNAPSHOT"				//版本号
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
